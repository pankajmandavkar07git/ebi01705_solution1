plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.asciidoctor.convert' version '2.4.0'
	id 'com.palantir.docker' version '0.25.0'
}

group = 'com.embl-ebi.ebi01705'
version = '1.0.1-RELEASE'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	
	runtimeOnly 'com.h2database:h2'
	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation('org.junit.jupiter:junit-jupiter-api:5.5.2')
    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.5.2')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.5.2')
    
	testCompile group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.7.1'
	compile group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.7.1'
	
	testCompile group: 'org.springframework.security', name: 'spring-security-test', version: '5.4.2'
	
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.5.RELEASE'
	testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.5.RELEASE'
}

ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

asciidoctor {
	sourceDir = file("src/main/asciidoc")
    outputDir = file("$buildDir/generated-docs")
    options backend: "html", doctype: "book"
    
	dependsOn test
}

docker {
    dependsOn build
	name "${authorName}/${project.name}:${project.version}"
	files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}